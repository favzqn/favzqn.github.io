---
import { getEntry } from 'astro:content'
import { render } from 'astro:content'

const experienceEntry = await getEntry('experience', 'experience')
// Check if there is actual content (excluding comments)
const hasContent = experienceEntry?.body
  ? experienceEntry.body.replace(/<!--[\s\S]*?-->/g, '').trim().length > 0
  : false
const { Content } = hasContent && experienceEntry ? await render(experienceEntry) : { Content: null }
---

{
  hasContent && Content && (
    <div class="experience prose">
      <Content />
    </div>
  )
}

<style>
  .experience {
    margin-top: 2rem;
  }
  
  .experience :global(h1) {
    margin-bottom: 2rem;
  }
  
  .experience :global(.experience-item) {
    margin-bottom: 3rem;
  }
  
  .experience :global(.experience-item h2) {
    margin-bottom: 0.25rem;
    font-size: 1.5rem;
  }
  
  .experience :global(.experience-item h3) {
    margin-top: 0;
    margin-bottom: 1rem;
    font-size: 1.1rem;
    font-weight: 500;
    opacity: 0.8;
  }
  
  .experience :global(p) {
    margin-bottom: 1rem;
    line-height: 1.7;
  }
  
  .experience :global(ul) {
    margin-top: 0.5rem;
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }
  
  .experience :global(li) {
    margin-bottom: 0.5rem;
    line-height: 1.6;
  }
  
  .experience :global(.metric-positive) {
    color: #10b981;
    font-weight: bold;
  }
  
  .experience :global(u) {
    text-decoration: underline;
    text-decoration-color: currentColor;
  }
  
  .experience :global(hr) {
    margin: 3rem 0;
    border: none;
    border-top: 1px solid var(--border-color, #e5e7eb);
  }
</style>
